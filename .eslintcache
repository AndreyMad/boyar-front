[{"C:\\Users\\andre\\Desktop\\boyar\\boyar-map\\src\\index.js":"1","C:\\Users\\andre\\Desktop\\boyar\\boyar-map\\src\\App.js":"2","C:\\Users\\andre\\Desktop\\boyar\\boyar-map\\src\\Ymap\\index.js":"3","C:\\Users\\andre\\Desktop\\boyar\\boyar-map\\src\\Gmap\\Gmap.js":"4"},{"size":198,"mtime":1609713131095,"results":"5","hashOfConfig":"6"},{"size":1048,"mtime":1610371179626,"results":"7","hashOfConfig":"6"},{"size":6217,"mtime":1610355666388,"results":"8","hashOfConfig":"6"},{"size":901,"mtime":1610374438433,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"9md35c",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\andre\\Desktop\\boyar\\boyar-map\\src\\index.js",[],["20","21"],"C:\\Users\\andre\\Desktop\\boyar\\boyar-map\\src\\App.js",[],"C:\\Users\\andre\\Desktop\\boyar\\boyar-map\\src\\Ymap\\index.js",["22"],"import React, { Component } from \"react\";\r\nimport {\r\n  YMaps,\r\n  Map,\r\n  Placemark,\r\n  RouteButton,\r\n  TrafficControl,\r\n  GeolocationControl\r\n} from \"react-yandex-maps\";\r\nimport BoyarImg from \"../img/logomap.png\";\r\nimport { Modal, Button } from \"antd\";\r\nimport style from \"./Ymap.module.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport shId from \"shortid\";\r\n\r\nclass Ymap extends Component {\r\n  state = {\r\n    defaultMapState: {\r\n      center: [61.26, 73.4],\r\n      zoom: 11,\r\n    },\r\n    selectedMapState: {},\r\n    isModalVisible: false,\r\n    modalValues: {\r\n      adress: \"\",\r\n      latitude: \"\",\r\n      longtitude: \"\",\r\n      comment: \"\",\r\n    },\r\n  };\r\n\r\n  dotSelect(dot) {\r\n    this.setState({\r\n      selectedMapState: { center: [+dot.latitude, +dot.longtitude], zoom: 14 },\r\n    });\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      isModalVisible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    const { modalValues } = this.state;\r\n    const { createDot } = this.props;\r\n    const latitudeRegexp = /([-+]?(([1-8]?\\d(\\.\\d+))+|90))/g;\r\n    const longtitudeRegexp = /^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$/g;\r\n    const latitude = modalValues.latitude.replace(\",\", \".\");\r\n    const longtitude = modalValues.longtitude.replace(\",\", \".\");\r\n    if (!latitude.match(latitudeRegexp)) {\r\n      return alert(\"неправильная широта\");\r\n    } else if (!longtitude.match(longtitudeRegexp)) {\r\n      return alert(\"неправильная долгота\");\r\n    }\r\n    const newDot = {\r\n      latitude: latitude,\r\n      longtitude: longtitude,\r\n      name: modalValues.adress,\r\n      description: modalValues.comment,\r\n      id: shId.generate(),\r\n    };\r\n    createDot(newDot);\r\n    this.handleCancel();\r\n  };\r\n  handleCancel = () => {\r\n    this.setState({\r\n      isModalVisible: false,\r\n      modalValues: {\r\n        adress: \"\",\r\n        latitude: \"\",\r\n        longtitude: \"\",\r\n        comment: \"\",\r\n      },\r\n    });\r\n  };\r\n  inputHandler = ({ target }) => {\r\n    this.setState((prevState) => ({\r\n      modalValues: { ...prevState.modalValues, [target.id]: target.value },\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { dots, deleteDot } = this.props;\r\n    const {\r\n      defaultMapState,\r\n      selectedMapState,\r\n      isModalVisible,\r\n      modalValues,\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <YMaps>\r\n          <Map\r\n            width={`80%`}\r\n            height={\"400px\"}\r\n            defaultState={defaultMapState}\r\n            state={selectedMapState.center ? selectedMapState : defaultMapState}\r\n          >\r\n            <TrafficControl />\r\n            <RouteButton options={{ float: \"right\" }} />\r\n            <GeolocationControl options={{ float: 'left' }} />\r\n            {dots.length > 0\r\n              ? dots.map((dot) => {\r\n                  return (\r\n                    <Placemark\r\n                      geometry={[+dot.latitude, +dot.longtitude]}\r\n                      properties={{\r\n                        hintContent: dot.name,\r\n\r\n                        balloonContent: ` <span>График работы:</span> <br/> <span>${\r\n                          dot.description\r\n                        }</span> ${\r\n                          dot.comment ? (\r\n                            <>\r\n                              <br />\r\n                              <span>{dot.comment}</span>\r\n                            </>\r\n                          ) : (\r\n                            \"\"\r\n                          )\r\n                        }`,\r\n                      }}\r\n                      options={{\r\n                        hideIconOnBalloonOpen: false,\r\n                        iconLayout: \"default#image\",\r\n                        iconImageHref: BoyarImg,\r\n                        iconImageSize: [42, 42],\r\n                        iconImageOffset: [-21, -42],\r\n                        iconContentOffset: [-42, -42],\r\n                      }}\r\n                      modules={[\r\n                        \"geoObject.addon.balloon\",\r\n                        \"geoObject.addon.hint\",\r\n                      ]}\r\n                    />\r\n                  );\r\n                })\r\n              : null}\r\n          </Map>\r\n        </YMaps>\r\n        {dots.length > 0 ? (\r\n          <ul className={style.list}>\r\n            {dots.map((dot) => {\r\n              return (\r\n                <li value={dot.description}>\r\n                  <a href=\"#\" onClick={() => this.dotSelect(dot)}>\r\n                    {dot.description}\r\n                  </a>\r\n                  <button\r\n                    className={style.deleteBtn}\r\n                    onClick={() => deleteDot(dot.id)}\r\n                  >\r\n                    Х\r\n                  </button>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : null}\r\n\r\n        <Button type=\"primary\" onClick={this.showModal}>\r\n          Open Modal\r\n        </Button>\r\n        <Modal\r\n          title=\"Добавить новую точку\"\r\n          visible={isModalVisible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <form>\r\n            <input\r\n              className={style.modalInput}\r\n              placeholder=\"Адрес\"\r\n              id=\"adress\"\r\n              value={modalValues.adress}\r\n              onChange={this.inputHandler}\r\n            ></input>\r\n            <input\r\n              className={style.modalInput}\r\n              placeholder=\"Широта\"\r\n              id=\"latitude\"\r\n              value={modalValues.latitude}\r\n              onChange={this.inputHandler}\r\n            ></input>\r\n            <input\r\n              className={style.modalInput}\r\n              placeholder=\"Долгота\"\r\n              id=\"longtitude\"\r\n              value={modalValues.longtitude}\r\n              onChange={this.inputHandler}\r\n            ></input>\r\n            <input\r\n              className={style.modalInput}\r\n              placeholder=\"Описание\"\r\n              id=\"comment\"\r\n              value={modalValues.comment}\r\n              onChange={this.inputHandler}\r\n            ></input>\r\n          </form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ymap;\r\n","C:\\Users\\andre\\Desktop\\boyar\\boyar-map\\src\\Gmap\\Gmap.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":148,"column":19,"nodeType":"29","endLine":148,"endColumn":67},"no-native-reassign",["30"],"no-negated-in-lhs",["31"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]